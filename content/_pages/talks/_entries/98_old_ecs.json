{
    "elements": [
        {
            "template": "templates/entries/text.tpl",
            "expand": {
                "Title": "Implementation of a component-based entity system in modern C++",
                "Text": "<img src=\"resources/img/openHexagon.png\">
                        <p>An alternative to deep inheritance trees for game and application architecture design is \"composition\". Separating data (in independent components) from logic (in independent systems) allows the code to be more reusable and more efficient, alongside additional benefits. Using modern C++11 and C++14 features, it is possible to design an efficient and user-friendly component-based entity system library, with intuitive syntax and convenient cost-free abstractions.</p>"
            }
        },
        {
            "template": "templates/entries/menu.tpl",
            "expand": {
                "MenuItems": [
                    {
                        "Title": "CppCon 2015",
                        "Link": "https://www.youtube.com/watch?v=NTWSeQtHZ9M"
                    }
                ]
            }
        }
    ]
}
